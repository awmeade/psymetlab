table(flag)
r.df <- d[flag==0,]
return(r.df)
}
d.1 <- f.screen.outliers(d,d.RRPT)
describe(d.1)
describe(d.1$RRPT.flex)
rm(list = ls())
library("psych")
source('helper.functions.R')
#######################  Read in the Merged Data   #######################
d <- read.csv("CCL_merged.csv")  ## read data
temp.n <- names(d)
#write.xlsx(temp.n,'var_names.xlsx')
file.remove('output.xlsx')
############## data selectors ###################
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
d.RRPT <- d[RRPT.vars]
d.pers <- d[748:775]
vars.current.perf <- grep("S3_02", names(d), value=TRUE)
d.perf <- d[vars.current.perf]
######## outlier identification ########
d.1 <- f.screen.outliers(d,d.RRPT)
describe(d.1$RRPT.flex)
names(d.1)
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.write.corrs(fname = 'converge.xlsx', s.name = 'converge', obj.corrs = out)
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = 'Big5_perf', obj.corrs = out, print.p = FALSE)
out <- corr.test(d.RRPT,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = 'RRPT_perf', obj.corrs = out, print.p = FALSE)
rm(list = ls())
d <- read.csv("CCL_merged.csv")  ## read data
file.remove('output.xlsx')
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
d.RRPT <- d[RRPT.vars]
d.1 <- f.screen.outliers(d,d.RRPT)
source('helper.functions.R')
d.1 <- f.screen.outliers(d,d.RRPT)
names(d.1)
rm(d)
d.RRPT <- d.1[RRPT]
d.RRPT <- d.1[RRPT.vars]
d.pers <- d.1[748:775]
vars.current.perf <- grep("S3_02", names(d), value=TRUE)
vars.current.perf <- grep("S3_02", names(d.1), value=TRUE)
d.perf <- d.1[vars.current.perf]
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.write.corrs(fname = 'converge.xlsx', s.name = 'converge', obj.corrs = out)
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = 'Big5_perf', obj.corrs = out, print.p = FALSE)
out <- corr.test(d.RRPT,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = 'RRPT_perf', obj.corrs = out, print.p = FALSE)
d <- d.1
d.names <- names(d)
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
d.crit.var <- d.perf$S3_02_Boss
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
d <- d.RRPT
d.names <- names(d)
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
d.crit.var <- d.perf$S3_02_Peers
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
(i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
#hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d[,i], use="pairwise.complete.obs"),2)
#hist(d[,i], main = d.names[i])
plot(d.crit.var ~ d[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
perf.var <- "S3_02"
vars.current.perf <- grep(perf.var, names(d.1), value=TRUE)
d.perf <- d.1[vars.current.perf]
perf.var <- "S3_02"
vars.current.perf <- grep(perf.var, names(d.1), value=TRUE)
d.perf <- d.1[vars.current.perf]
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE)
out <- corr.test(d.RRPT,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE)
rm(list = ls())
library("psych")
source('helper.functions.R')
#######################  Read in the Merged Data   #######################
d <- read.csv("CCL_merged.csv")  ## read data
#temp.n <- names(d)
#write.xlsx(temp.n,'var_names.xlsx')
file.remove('output.xlsx')
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
d.RRPT <- d[RRPT.vars]
d.1 <- f.screen.outliers(d,d.RRPT)
d <- d.1
rm(d.1)
rm(list = ls())
library("psych")
source('helper.functions.R')
#######################  Read in the Merged Data   #######################
d.0 <- read.csv("CCL_merged.csv")  ## read data
#temp.n <- names(d)
#write.xlsx(temp.n,'var_names.xlsx')
file.remove('output.xlsx')
######## outlier identification ########
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
f.screen.outliers <- function(f.d,d.vars,p.val = .95){
#number.to.remove     <- trunc(nrow(d) * percentage.to.remove / 100)
m.dist               <- mahalanobis(d.vars,colMeans(d.vars,na.rm=TRUE), cov(d.vars,use="pairwise.complete.obs"))
#   m.dist.order         <- order(m.dist, decreasing=TRUE)
#   rows.to.keep.index   <- m.dist.order[(number.to.remove+1):nrow(d)]
#   my.dataframe         <- d[rows.to.keep.index,]
cut <- qchisq(p=p.val,df=ncol(d.vars))
flag <- ifelse(m.dist > cut,1,0)
table(flag)
r.df <- f.d[flag==0,]
return(r.df)
}
?local
rm(list = ls())
library("psych")
source('helper.functions.R')
d.0 <- read.csv("CCL_merged.csv")  ## read data
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
d <- d.1
rm(d.1)
d.RRPT <- d.1[RRPT.vars]
d.RRPT <- d[RRPT.vars]
d.pers <- d[748:775]
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.write.corrs(fname = 'converge.xlsx', s.name = 'converge', obj.corrs = out)
perf.var <- "S3_02"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
perf.var <- "S3_02"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(d.RRPT,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
d.crit.var <- d.perf$S3_02_Peers
d.names <- names(d.RRPT)
for (i in 1:ncol(d) ) {
the.r <- round(cor(d.crit.var,d.RRPT[,i], use="pairwise.complete.obs"),2)
plot(d.crit.var ~ d.RRPT[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
for (i in 1:ncol(d.RRPT) ) {
the.r <- round(cor(d.crit.var,d.RRPT[,i], use="pairwise.complete.obs"),2)
plot(d.crit.var ~ d.RRPT[,i], main=paste0('r = ',the.r),
xlab=d.names[i], ylab="Perf")
}
perf.var <- "S3_03"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs <- local(function(perf.data,pers.data,rrpt.data){
out <- corr.test(d.pers,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(d.RRPT,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
perf.var <- "S3_03"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs <- local(function(perf.data,pers.data,rrpt.data){
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
perf.var <- "S3_03"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
perf.var <- "S3_01"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
perf.var <- "S3_07"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
perf.var <- "S3_08"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
perf.var <- "S3_09"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
perf.var <- "S3_11"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
rm(list = ls())
source('H:/Google Drive/Academic Research (synced)/RT Personality/Workplace Version/Study 5 CCL/analyses/CCL analyses.R', echo=TRUE)
library("psych")
source('helper.functions.R')
rm(list = ls())
library("psych")
source('helper.functions.R')
file.remove('output.xlsx')
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
d <- d.1
rm(d.1)
d.0 <- read.csv("CCL_merged.csv")  ## read data
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
d <- d.1
rm(d.1)
############## convergent and discrim validity correlations ###################
d.RRPT <- d[RRPT.vars]
d.pers <- d[748:775]
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.corstar <- local(function(corr.obj, is.triangle = TRUE, p.val.1 = .05, p.val.2 = .01){
R <- corr.obj$r
p <- corr.obj$p
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < p.val.1,"* ", " ")
if(p < p.val.2){
mystars <- "** "
}
## trunctuate the matrix that holds the correlations to two decimal
R <- format(round(R, 2))
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(R))
rownames(Rnew) <- rownames(R)
colnames(Rnew) <- paste(colnames(R), "", sep="")
## if triangle, remove upper triangle
if(is.triangle==TRUE){
diag(Rnew) <- paste(diag(R), " ", sep="")
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
## remove last column and return the matrix (which is now a data frame)
Rnew <- cbind(Rnew[1:length(Rnew)-1])
}
return(Rnew)
})
f.write.section.3.corrs <- local(function(perf.data,pers.data,rrpt.data){
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
perf.var <- "S3_11"
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[vars.current.perf]
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
f.corstar <- local(function(corr.obj, is.triangle = TRUE, p.val.1 = .05, p.val.2 = .01){
R <- corr.obj$r
p <- corr.obj$p
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < p.val.1,ifelse(p<p.val.2,"** ","* "), " ")
## trunctuate the matrix that holds the correlations to two decimal
R <- format(round(R, 2))
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(R))
rownames(Rnew) <- rownames(R)
colnames(Rnew) <- paste(colnames(R), "", sep="")
## if triangle, remove upper triangle
if(is.triangle==TRUE){
diag(Rnew) <- paste(diag(R), " ", sep="")
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
## remove last column and return the matrix (which is now a data frame)
Rnew <- cbind(Rnew[1:length(Rnew)-1])
}
return(Rnew)
})
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
f.write.section.3.corrs(perf.data = d.perf, pers.data = d.pers, rrpt.data = d.RRPT)
rm(list = ls())
library("psych")
source('helper.functions.R')
rm(list = ls())
rm(list = ls())
library("psych")
source('helper.functions.R')
d.0 <- read.csv("CCL_merged.csv")  ## read data
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
d <- d.1
rm(d.1)
############## convergent and discrim validity correlations ###################
d.RRPT <- d[RRPT.vars]
d.pers <- d[748:775]
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.write.corrs(fname = 'converge.xlsx', s.name = 'converge', obj.corrs = out)
f.write.section.3.corrs <- local(function(perf.data,pers.data,rrpt.data){
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT <- d.0[RRPT.vars]
d.pers <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[perf.var]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
perf.var <- "S3_11"
f.section.3.corrs(d, perf.var = perf.var)
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT <- d.0[RRPT.vars]
d.pers <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
d.perf <- d[perf.var]
out <- corr.test(pers.data,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,d.perf,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs(d, perf.var = perf.var)
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT.data <- d.0[RRPT.vars]
pers.data <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
perf.data <- d[perf.var]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(rrpt.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs(d, perf.var = perf.var)
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT.data <- d.0[RRPT.vars]
pers.data <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
perf.data <- d[perf.var]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(RRPT.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs(d, perf.var = perf.var)
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT.data <- d[RRPT.vars]
pers.data <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
perf.data <- d[perf.var]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(RRPT.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs(d, perf.var = perf.var)
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT.data <- d[RRPT.vars]
pers.data <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
perf.data <- d[vars.current.perf]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(RRPT.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
f.section.3.corrs(d, perf.var = perf.var)
f.nameme <- as.formula(paste('S3_11_Boss ~', paste(RRPT.vars), collapse='+')))
f.nameme <- as.formula(paste('S3_11_Boss ~', paste(RRPT.vars), collapse='+'))
temp <- lm(f, data=d)
f.nameme <- as.formula(paste('S3_11_Boss ~', paste(RRPT.vars), collapse='+'))
temp <- lm(f.nameme, data=d)
f.nameme <- as.formula(paste('S3_11_Boss ~', paste(colnames(d.RRPT), collapse='+')))
temp <- lm(f.nameme, d)
ceof(temp)
coef(temp)
?lm
f.get.reg.output <- function(fit){
the.model <- summary(fit)$call
get.model <- toString(the.model)
coef <- round(summary(fit)$coefficients,2)
f <- as.matrix(round(summary(fit)$fstatistic,2))
p <- round(pf(f[1],f[2],f[3],lower.tail=F),3)
r2 <- round(summary(fit)$r.squared,2)
r <- round(sqrt(r2),2)
f.stats <- rbind(f,p,r2,r)
x <- matrix(NA, ncol = ncol(coef), nrow = 6)
x[,1] <- f.stats
row.names(x) <- c("F value","df1","df2","p","r-sq","r")
return.me <- rbind(coef,x)
return.me <- cbind(return.me,get.model)
return.me
return(return.me)
}
f.get.reg.output(temp)
names(d)
sec3.vars <- grep("S3_", names(d), value=TRUE)
sec3.vars
d.section.3 <- d[sec3.vars]
rm(d.1,d.0)
rm(list = ls())
library("psych")
source('helper.functions.R')
#######################  Read in the Merged Data   #######################
d.0 <- read.csv("CCL_merged.csv")  ## read data
RRPT.vars <- grep("RRPT", names(d.0), value=TRUE)
d.RRPT <- d.0[RRPT.vars]
d.1 <- f.screen.outliers(d.0,d.RRPT)
d <- d.1
rm(d.1,d.0)
######## data selectors ########
############## convergent and discrim validity correlations ###################
d.RRPT <- d[RRPT.vars]
d.pers <- d[748:775]
sec3.vars <- grep("S3_", names(d), value=TRUE)
d.section.3 <- d[sec3.vars]
out <- corr.test(d.pers,d.RRPT,adjust="none")
f.section.3.corrs <- local(function(d,perf.var){
RRPT.vars <- grep("RRPT", names(d), value=TRUE)
RRPT.data <- d[RRPT.vars]
pers.data <- d[748:775]
vars.current.perf <- grep(perf.var, names(d), value=TRUE)
perf.data <- d[vars.current.perf]
out <- corr.test(pers.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx', s.name = paste0('Big5_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
out <- corr.test(RRPT.data,perf.data,adjust="none")
f.write.corrs(fname = 'section 3.xlsx',s.name = paste0('RRPT_',perf.var), obj.corrs = out, print.p = FALSE, print.n = FALSE)
return(TRUE)
})
perf.var <- "S3_11"
f.nameme <- as.formula(paste('S3_11_Boss ~', paste(colnames(d.RRPT), collapse='+')))
temp <- lm(f.nameme, d)
temp
adam <- f.get.reg.output(temp)
f.get.reg.output <- function(fit){
the.model <- summary(fit)$call
get.model <- toString(the.model)
coef <- round(summary(fit)$coefficients,2)
f <- as.matrix(round(summary(fit)$fstatistic,2))
p <- round(pf(f[1],f[2],f[3],lower.tail=F),3)
r2 <- round(summary(fit)$r.squared,2)
r <- round(sqrt(r2),2)
f.stats <- rbind(f,p,r2,r)
x <- matrix(NA, ncol = ncol(coef), nrow = 6)
x[,1] <- f.stats
row.names(x) <- c("F value","df1","df2","p","r-sq","r")
return.me <- rbind(coef,x)
return.me <- cbind(return.me,get.model)
return.me
return(return.me)
}
adam <- f.get.reg.output(temp)
adam
rm(list = ls())
library("psych")
library('devtools')
remove.packages('psymetlab') # refresh psymetlab
install_github('awmeade/psymetlab')
library('psymetlab')
library('devtools')
library('roxygen2')
remove.packages('psymetlab')
setwd('H:/Google Drive/Git/psymetlab')
document()
check()
Rd2pdf psymetlab
"C:\Program Files\R\R-3.1.3\bin\R.exe" CMD Rd2pdf psymetlab
